{"version":3,"sources":["frontend/screens/BubbleBackground/BubbleBackground.js","backend/solace-connection-options.js","backend/solace-connection.js","frontend/components/ModalCreateABubble/ModalCreateABubble.js","frontend/components/ModalJoinABubble/ModalJoinABubble.js","frontend/img/logo.svg","frontend/screens/MainMenu/MainMenu.js","frontend/components/Video/Video.js","frontend/components/ModalPlayVideo/ModalPlayVideo.js","frontend/components/SideBarLabel/SideBarLabel.js","frontend/components/SideBarList/SideBarList.js","frontend/components/SideBarChat/SideBarChat.js","frontend/components/SideBar/SideBar.js","frontend/screens/RoomScreen/RoomScreen.js","frontend/components/ThemeChanger/ThemeChanger.js","frontend/App.js","index.js"],"names":["Bubbles","themeColor","colorTransparent","themeTransparency","className","style","backgroundImage","userName","password","process","invocationContext","host","port","clientId","timeout","keepAliveInterval","cleanSession","useSSL","reconnect","solaceConnection","options","Number","onMessageArrived","handleMessage","bind","callbacks","Promise","resolve","reject","onSuccess","onFailure","connect","responseObject","errorCode","console","log","callback","this","push","message","payloadString","forEach","Paho","Client","Modal","setAppElement","MODAL_STYLES","overlay","backgroundColor","content","width","minWidth","borderRadius","top","left","right","bottom","marginRight","transform","zIndex","color","ModalCreateABubble","isOpen","closeModal","contentLabel","useState","nickname","setNickname","newRoomCode","setNewRoomCode","isFetching","setIsFetching","networkErrorEncountered","setNetworkErrorEncountered","redirectToRoomScreen","setRedirectToRoomScreen","to","pathname","state","roomcode","handleSubmit","e","a","preventDefault","fetch","method","then","response","json","roomCodeObject","payload","username","headers","body","JSON","stringify","status","connectWithPromise","subscribe","catch","error","resetForm","onRequestClose","onSubmit","type","value","onChange","target","maxLength","disabled","cursor","marginBottom","display","padding","ModalJoinABubble","setRoomCode","MainMenu","isJoinModalOpen","setIsJoinModalOpen","isCreateModalOpen","setIsCreateModalOpen","useEffect","disconnect","src","logo","alt","onClick","VideoApp","props","playNewVideo","playVideo","pauseVideo","onPlayerReady","getStateName","videoId","player","videoOptions","height","obj","parse","messageType","eventCode","stateName","broadcastedVideoTime","videoTime","currentVideoTime","getCurrentTime","Math","abs","seekTo","loadVideoById","event","register","Message","destinationName","send","code","data","opts","onReady","onPlay","onVideoPlay","onPause","onVideoPause","onPlaybackRateChange","onVideoPlaybackRateChange","onStateChange","onVideoStateChange","onEnd","onVideoEnd","Component","ModalPlayVideo","queueVideo","handleNewVideoURL","url","URL","searchParams","get","urlString","document","getElementById","msg","err","id","SideBarLabel","label","SideBarList","list","displayList","setDisplayList","map","item","i","SideBarChat","setMessage","messages","setMessages","anchor","useRef","handleNewTextMessage","newMessage","text","scrollToCurrentMessage","current","scrollIntoView","behavior","user","ref","SideBar","isPlayModalOpen","setIsPlayModalOpen","roomMembers","setRoomMembers","handleNewUser","users","videoID","icon","faPlayCircle","RoomScreen","location","video","Video","render","ThemeChanger","setThemeColor","showColorPicker","setShowColorPicker","colorValue","setColorValue","faPalette","hex","disableAlpha","App","basename","path","exact","component","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.982d9416.chunk.js","sourcesContent":["import './BubbleBackground.css';\r\n\r\nfunction Bubbles({ themeColor, themeTransparency }) {\r\n  const colorTransparent = themeColor + themeTransparency;\r\n  return (\r\n    <div\r\n      className=\"Bubbles\"\r\n      style={{ backgroundImage: `linear-gradient(to bottom right, ${colorTransparent}, ${themeColor})` }}\r\n    >\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bubbles;\r\n","export default {\r\n\tuserName: \"solace-cloud-client\",\r\n\tpassword: process.env.REACT_APP_PASSWORD,\r\n\tinvocationContext: {\r\n\t\thost: process.env.REACT_APP_SECURE_HOST,\r\n\t\tport: 8443,\r\n\t\tclientId: \"\"\r\n\t},\r\n\ttimeout: 3,\r\n\tkeepAliveInterval: 60,\r\n\tcleanSession: true,\r\n\tuseSSL: true,\r\n\treconnect: true\r\n};","import options from './solace-connection-options';\r\nimport Paho from 'paho-mqtt';\r\n\r\nclass SolaceConnection extends Paho.Client {\r\n  constructor() {\r\n    super(options.invocationContext.host, Number(options.invocationContext.port), options.invocationContext.clientId);\r\n    this.onMessageArrived = this.handleMessage.bind(this);\r\n    this.callbacks = [];\r\n  }\r\n\r\n  connectWithPromise() {\r\n    return new Promise((resolve, reject) => {\r\n      options.onSuccess = resolve;\r\n      options.onFailure = reject;\r\n      this.connect(options);\r\n    });\r\n  }\r\n\r\n  // called when the client loses its connection\r\n  onConnectionLost(responseObject) {\r\n    if (responseObject.errorCode !== 0) {\r\n      console.log('Connection lost with Solace Cloud');\r\n    }\r\n\r\n    // TODO: add auto-reconnect\r\n  }\r\n\r\n  register(callback) {\r\n    this.callbacks.push(callback);\r\n  }\r\n\r\n  // called when a message arrives\r\n  handleMessage(message) {\r\n    console.log('Received message', message.payloadString);\r\n    this.callbacks.forEach((callback) => callback(message));\r\n  }\r\n}\r\n\r\nconst solaceConnection = new SolaceConnection();\r\nexport default solaceConnection;\r\n","import { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './ModalCreateABubble.css';\r\n\r\nimport solaceConnection from '../../../backend/solace-connection';\r\n\r\nModal.setAppElement('#modal-portal');\r\n\r\nconst MODAL_STYLES = {\r\n  overlay: {\r\n    backgroundColor: 'none'\r\n  },\r\n  content: {\r\n    width: '15%',\r\n    minWidth: '200px',\r\n    borderRadius: '10px',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: '1000',\r\n    color: 'rgba(0, 0, 0, 0.5)'\r\n  }\r\n};\r\n\r\nfunction ModalCreateABubble({ isOpen, closeModal, contentLabel }) {\r\n  const [ nickname, setNickname ] = useState('');\r\n  const [ newRoomCode, setNewRoomCode ] = useState('');\r\n  const [ isFetching, setIsFetching ] = useState(false);\r\n  const [ networkErrorEncountered, setNetworkErrorEncountered ] = useState(false);\r\n  const [ redirectToRoomScreen, setRedirectToRoomScreen ] = useState(false);\r\n\r\n  if (redirectToRoomScreen) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/room',\r\n          state: { roomcode: newRoomCode, nickname: nickname }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsFetching(true);\r\n\r\n    if (nickname !== '') {\r\n      // CREATE ROOM AND THEN JOIN THAT ROOM\r\n      try {\r\n        const roomCodeObject = await fetch(`${process.env.REACT_APP_BACKEND_URL}/createroom`, {\r\n          method: 'POST'\r\n        }).then((response) => response.json());\r\n\r\n        const roomcode = roomCodeObject.message;\r\n        const payload = { roomcode: roomcode, username: nickname };\r\n        setNewRoomCode(roomcode);\r\n\r\n        console.log(payload);\r\n\r\n        const joinRoomResponse = await fetch(`${process.env.REACT_APP_BACKEND_URL}/joinroom`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(payload)\r\n        });\r\n\r\n        if (joinRoomResponse.status === 200) {\r\n          solaceConnection\r\n            .connectWithPromise()\r\n            .then((response) => {\r\n              console.log('Succesfully connected to Solace Cloud.', response);\r\n              // subscribe to topic\r\n              solaceConnection.subscribe(roomcode);\r\n              // redirect\r\n              setRedirectToRoomScreen(true);\r\n            })\r\n            .catch((error) => {\r\n              console.log('Unable to establish connection with Solace Cloud, see above logs for more details.', error);\r\n              setNetworkErrorEncountered(true);\r\n            });\r\n        } else {\r\n          setNetworkErrorEncountered(true);\r\n          resetForm();\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        setNetworkErrorEncountered(true);\r\n        resetForm();\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNickname('');\r\n    setIsFetching(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      // onAfterOpen={afterOpenModal}\r\n      onRequestClose={() => {\r\n        resetForm();\r\n        setNetworkErrorEncountered(false);\r\n        closeModal();\r\n      }}\r\n      style={MODAL_STYLES}\r\n      contentLabel={contentLabel}\r\n    >\r\n      <p className=\"modal-header\">nickname</p>\r\n      <form className=\"modal-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"modal-name-input\"\r\n          type=\"text\"\r\n          value={nickname}\r\n          onChange={(e) => setNickname(e.target.value)}\r\n          maxLength={15}\r\n          disabled={isFetching}\r\n          style={{ cursor: isFetching ? 'not-allowed' : 'auto' }}\r\n        />\r\n        <button className=\"modal-submit-button\" disabled={nickname === '' || isFetching}>\r\n          join\r\n        </button>\r\n      </form>\r\n      <p style={{ marginBottom: 0, color: '#f44', display: networkErrorEncountered ? 'block' : 'none' }}>\r\n        Our servers are having some issues at the moment...\r\n      </p>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalCreateABubble;\r\n","import { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport './ModalJoinABubble.css';\r\n\r\nimport solaceConnection from '../../../backend/solace-connection';\r\n\r\nModal.setAppElement('#modal-portal');\r\n\r\nconst MODAL_STYLES = {\r\n  overlay: {\r\n    backgroundColor: 'none'\r\n  },\r\n  content: {\r\n    width: '15%',\r\n    minWidth: '200px',\r\n    borderRadius: '10px',\r\n    padding: '30px',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: '1000',\r\n    color: 'rgba(0, 0, 0, 0.5)'\r\n  }\r\n};\r\n\r\nfunction ModalJoinABubble({ isOpen, closeModal, contentLabel }) {\r\n  const [ roomcode, setRoomCode ] = useState('');\r\n  const [ nickname, setNickname ] = useState('');\r\n  const [ isFetching, setIsFetching ] = useState(false);\r\n  const [ networkErrorEncountered, setNetworkErrorEncountered ] = useState(false);\r\n  const [ redirectToRoomScreen, setRedirectToRoomScreen ] = useState(false);\r\n\r\n  if (redirectToRoomScreen) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/room',\r\n          state: { roomcode, nickname }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsFetching(true);\r\n\r\n    try {\r\n      const payload = { roomcode: roomcode, username: nickname };\r\n      const joinRoomResponse = await fetch(`${process.env.REACT_APP_BACKEND_URL}/joinroom`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (joinRoomResponse.status === 200) {\r\n        // subscribe to topic\r\n        solaceConnection\r\n          .connectWithPromise()\r\n          .then((response) => {\r\n            console.log('Succesfully connected to Solace Cloud.', response);\r\n            solaceConnection.subscribe(roomcode);\r\n\r\n            // redirect to room screen\r\n            setRedirectToRoomScreen(true);\r\n          })\r\n          .catch((error) => {\r\n            console.log('Unable to establish connection with Solace Cloud, see above logs for more details.', error);\r\n          });\r\n      } else {\r\n        setNetworkErrorEncountered(true);\r\n        resetForm();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setNetworkErrorEncountered(true);\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setRoomCode('');\r\n    setNickname('');\r\n    setIsFetching(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      // onAfterOpen={afterOpenModal}\r\n      onRequestClose={() => {\r\n        resetForm();\r\n        setNetworkErrorEncountered(false);\r\n        closeModal();\r\n      }}\r\n      style={MODAL_STYLES}\r\n      contentLabel={contentLabel}\r\n    >\r\n      <form className=\"modal-join-form\" onSubmit={handleSubmit}>\r\n        <p className=\"modal-join-header\">bubble code</p>\r\n        <input\r\n          className=\"modal-join-code-input\"\r\n          type=\"text\"\r\n          value={roomcode}\r\n          onChange={(e) => setRoomCode(e.target.value)}\r\n          disabled={isFetching}\r\n          style={{ cursor: isFetching ? 'not-allowed' : 'auto' }}\r\n        />\r\n        <p className=\"modal-join-header\">nickname</p>\r\n        <input\r\n          className=\"modal-join-name-input\"\r\n          type=\"text\"\r\n          value={nickname}\r\n          onChange={(e) => setNickname(e.target.value)}\r\n          maxLength={15}\r\n          disabled={isFetching}\r\n          style={{ cursor: isFetching ? 'not-allowed' : 'auto' }}\r\n        />\r\n        <button className=\"modal-join-submit-button\" disabled={nickname === '' || roomcode === '' || isFetching}>\r\n          join\r\n        </button>\r\n      </form>\r\n      <p style={{ marginBottom: 0, color: '#f44', display: !networkErrorEncountered || isFetching ? 'none' : 'block' }}>\r\n        Please enter a valid room code.\r\n      </p>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalJoinABubble;\r\n","export default __webpack_public_path__ + \"static/media/logo.cead2453.svg\";","import { useState, useEffect } from 'react';\r\nimport ModalCreateABubble from '../../components/ModalCreateABubble/ModalCreateABubble';\r\nimport ModalJoinABubble from '../../components/ModalJoinABubble/ModalJoinABubble';\r\nimport logo from '../../img/logo.svg';\r\nimport './MainMenu.css';\r\n\r\nimport solaceConnection from '../../../backend/solace-connection';\r\n\r\nfunction MainMenu() {\r\n  const [ isJoinModalOpen, setIsJoinModalOpen ] = useState(false);\r\n  const [ isCreateModalOpen, setIsCreateModalOpen ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // disconnect client from solace everytime they go to the main menu (home screen)\r\n    try {\r\n      solaceConnection.disconnect();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"MainMenu\">\r\n      <div style={{ display: isJoinModalOpen || isCreateModalOpen ? 'none' : 'block' }}>\r\n        <div className=\"logo-section\">\r\n          <h1 className=\"logo-text\">bubbles</h1>\r\n          <img className=\"logo-pic\" src={logo} alt=\"logo\" />\r\n        </div>\r\n        <div className=\"menu-buttons\">\r\n          <p className=\"menu-button\" onClick={() => setIsCreateModalOpen(true)}>\r\n            start a bubble\r\n          </p>\r\n          <p className=\"menu-button\" onClick={() => setIsJoinModalOpen(true)}>\r\n            join a bubble\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <ModalCreateABubble\r\n        isOpen={isCreateModalOpen}\r\n        closeModal={() => setIsCreateModalOpen(false)}\r\n        contentLabel=\"Create A Bubble\"\r\n      />\r\n      <ModalJoinABubble\r\n        isOpen={isJoinModalOpen}\r\n        closeModal={() => setIsJoinModalOpen(false)}\r\n        contentLabel=\"Join A Bubble\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React, { Component } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport solaceConnection from '../../../backend/solace-connection';\r\nimport Paho from 'paho-mqtt';\r\n\r\nclass VideoApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.playNewVideo = this.playNewVideo.bind(this);\r\n    this.playVideo = this.playVideo.bind(this);\r\n    this.pauseVideo = this.pauseVideo.bind(this);\r\n    this.onPlayerReady = this.onPlayerReady.bind(this);\r\n    this.getStateName = this.getStateName.bind(this);\r\n    this.videoId = '';\r\n    this.state = {\r\n      player: null,\r\n      videoOptions: {\r\n        height: '100%',\r\n        width: '100%'\r\n      }\r\n    };\r\n  }\r\n\r\n  handleMessage(message) {\r\n    const obj = JSON.parse(message.payloadString);\r\n    if (obj.messageType === 'playPressed') {\r\n      this.playVideo();\r\n    }\r\n\r\n    if (obj.messageType === 'pausePressed') {\r\n      this.pauseVideo();\r\n    }\r\n\r\n    if (obj.messageType === 'videoStateChange') {\r\n      const eventCode = obj.eventCode;\r\n      const stateName = this.getStateName(eventCode);\r\n      const broadcastedVideoTime = obj.videoTime;\r\n      const currentVideoTime = this.state.player.getCurrentTime();\r\n\r\n      // only seek if difference in video time is greater than 1 sec\r\n      if (Math.abs(currentVideoTime - broadcastedVideoTime) > 1) {\r\n        this.state.player.seekTo(broadcastedVideoTime);\r\n        if (stateName === 'playing') {\r\n          this.playVideo();\r\n        } else if (stateName === 'paused') {\r\n          this.pauseVideo();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  playNewVideo(videoId) {\r\n    this.videoId = videoId;\r\n    if (this.state.player) {\r\n      this.state.player.loadVideoById(this.videoId, 0);\r\n    }\r\n  }\r\n\r\n  playVideo(event) {\r\n    this.state.player.playVideo();\r\n  }\r\n\r\n  pauseVideo(event) {\r\n    this.state.player.pauseVideo();\r\n  }\r\n\r\n  onPlayerReady(event) {\r\n    this.state.player = event.target;\r\n    // videoId will be some video if the user joined a room with an already-playing video\r\n    if (this.videoId !== '') {\r\n      this.playNewVideo(this.videoId);\r\n    }\r\n    solaceConnection.register(this.handleMessage.bind(this));\r\n  }\r\n\r\n  onVideoPlay(event) {\r\n    let message = new Paho.Message(JSON.stringify({ messageType: 'playPressed', message: 'Play press detected' }));\r\n    message.destinationName = this.props.roomcode;\r\n    solaceConnection.send(message);\r\n  }\r\n\r\n  onVideoPause(event) {\r\n    let message = new Paho.Message(JSON.stringify({ messageType: 'pausePressed', message: 'Pause press detected' }));\r\n    message.destinationName = this.props.roomcode;\r\n    solaceConnection.send(message);\r\n  }\r\n\r\n  onVideoPlaybackRateChange(event) {}\r\n\r\n  onVideoStateChange(event) {\r\n    const code = event.data;\r\n    const videoTime = event.target.getCurrentTime();\r\n    console.log(`Video state ${this.getStateName(code)} at: `, videoTime);\r\n\r\n    // broadcase this video state change (this is how we handle seeks for now)\r\n    let message = new Paho.Message(\r\n      JSON.stringify({ messageType: 'videoStateChange', eventCode: code, videoTime: videoTime })\r\n    );\r\n    message.destinationName = this.props.roomcode;\r\n    solaceConnection.send(message);\r\n  }\r\n\r\n  onVideoEnd(event) {\r\n    console.log('Video ended');\r\n  }\r\n\r\n  onVideoError(event) {\r\n    console.log('Video error: ', event);\r\n  }\r\n\r\n  getStateName(eventCode) {\r\n    switch (eventCode) {\r\n      case -1:\r\n        return 'unstarted';\r\n      case 0:\r\n        return 'ended';\r\n      case 1:\r\n        return 'playing';\r\n      case 2:\r\n        return 'paused';\r\n      case 3:\r\n        return 'buffering';\r\n      case 5:\r\n        return 'video cued';\r\n      default:\r\n        return 'invalid code';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <YouTube\r\n        videoId={this.videoId}\r\n        className={'Video'}\r\n        opts={this.state.videoOptions}\r\n        onReady={this.onPlayerReady.bind(this)}\r\n        onPlay={this.onVideoPlay.bind(this)}\r\n        onPause={this.onVideoPause.bind(this)}\r\n        onPlaybackRateChange={this.onVideoPlaybackRateChange.bind(this)}\r\n        onStateChange={this.onVideoStateChange.bind(this)}\r\n        onEnd={this.onVideoEnd.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoApp;\r\n","import { useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './ModalPlayVideo.css';\r\nimport Paho from 'paho-mqtt';\r\n\r\nimport solaceConnection from '../../../backend/solace-connection';\r\n\r\nModal.setAppElement('#modal-portal');\r\n\r\nconst MODAL_STYLES = {\r\n  overlay: {\r\n    backgroundColor: 'none'\r\n  },\r\n  content: {\r\n    width: '15%',\r\n    minWidth: '200px',\r\n    borderRadius: '10px',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: '1000',\r\n    color: 'rgba(0, 0, 0, 0.5)'\r\n  }\r\n};\r\n\r\nfunction ModalPlayVideo({ isOpen, closeModal, contentLabel, queueVideo, roomcode }) {\r\n  useEffect(() => {\r\n    solaceConnection.register(handleNewVideoURL);\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let urlString = document.getElementById('youtube-link-input').value;\r\n      let url = new URL(urlString);\r\n      queueVideo(url.searchParams.get('v'));\r\n\r\n      // publish new video to solace\r\n      let msg = new Paho.Message(JSON.stringify({ messageType: 'newVideoURL', url: url }));\r\n      msg.destinationName = roomcode;\r\n      solaceConnection.send(msg);\r\n\r\n      // update backend\r\n      const payload = { roomcode, url: urlString };\r\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/setcurrentvideo`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n      }).catch((err) => console.log(err));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    closeModal();\r\n  };\r\n\r\n  const handleNewVideoURL = (message) => {\r\n    try {\r\n      const obj = JSON.parse(message.payloadString);\r\n      if (obj.messageType === 'newVideoURL') {\r\n        const url = new URL(obj.url);\r\n        queueVideo(url.searchParams.get('v'));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onRequestClose={closeModal} style={MODAL_STYLES} contentLabel={contentLabel}>\r\n      <p className=\"modal-play-header\">youtube video url</p>\r\n      <form className=\"modal-play-form\" onSubmit={handleSubmit}>\r\n        <input id=\"youtube-link-input\" className=\"modal-play-input\" type=\"text\" />\r\n        <button className=\"modal-play-submit-button\">play</button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalPlayVideo;\r\n","function SideBarLabel({ label, className, onClick }) {\r\n  return (\r\n    <p className={className} onClick={onClick}>\r\n      {label}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default SideBarLabel;\r\n","import { useState } from 'react';\r\nimport './SideBarList.css';\r\nimport SideBarLabel from '../SideBarLabel/SideBarLabel';\r\n\r\nfunction SideBarList({ list }) {\r\n  const [ displayList, setDisplayList ] = useState(true);\r\n  return (\r\n    <div className=\"SideBarList\">\r\n      <SideBarLabel className=\"SideBarList-Toggle\" label=\"members\" onClick={() => setDisplayList(!displayList)} />\r\n      <div style={{ display: displayList ? 'block' : 'none' }} className=\"SideBarList-Items\">\r\n        {list.map((item, i) => <p key={i}>{item}</p>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBarList;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport './SideBarChat.css';\r\nimport Paho from 'paho-mqtt';\r\n\r\nimport solaceConnection from '../../../backend/solace-connection';\r\n\r\nfunction SideBarChat({ roomcode, username }) {\r\n  const [ message, setMessage ] = useState('');\r\n  const [ messages, setMessages ] = useState([]);\r\n  const anchor = useRef();\r\n\r\n  useEffect(() => {\r\n    solaceConnection.register(handleNewTextMessage);\r\n  }, []);\r\n\r\n  const handleNewTextMessage = (message) => {\r\n    try {\r\n      const obj = JSON.parse(message.payloadString);\r\n      if (obj.messageType === 'newTextMessage') {\r\n        const newMessage = { username: obj.username, text: obj.text };\r\n\r\n        setMessages((messages) => [ ...messages, newMessage ]);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    scrollToCurrentMessage();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (message === '') return;\r\n\r\n    let msg = new Paho.Message(JSON.stringify({ messageType: 'newTextMessage', username: username, text: message }));\r\n    msg.destinationName = roomcode;\r\n    solaceConnection.send(msg);\r\n\r\n    // reset form\r\n    setMessage('');\r\n  };\r\n\r\n  const scrollToCurrentMessage = () => {\r\n    anchor.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"SideBarChat\">\r\n      <div className=\"SideBarChat-Items\">\r\n        {messages.map((message, i) => {\r\n          const user = message.username;\r\n          const text = message.text;\r\n          return (\r\n            <p className=\"SideBarChat-Item\" key={i}>\r\n              {user}: {text}\r\n            </p>\r\n          );\r\n        })}\r\n        <div ref={anchor} className=\"SideBarChat-anchor\" />\r\n      </div>\r\n      <form className=\"SideBarChat-Form\" onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBarChat;\r\n","import { useState, useEffect } from 'react';\r\nimport ModalPlayVideo from '../ModalPlayVideo/ModalPlayVideo';\r\nimport SideBarLabel from '../SideBarLabel/SideBarLabel';\r\nimport SideBarList from '../SideBarList/SideBarList';\r\nimport SideBarChat from '../SideBarChat/SideBarChat';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlayCircle, faDoorOpen } from '@fortawesome/free-solid-svg-icons';\r\nimport './SideBar.css';\r\n\r\nimport solaceConnection from '../../../backend/solace-connection';\r\n\r\nfunction SideBar({ roomcode, username, queueVideo }) {\r\n  const [ isPlayModalOpen, setIsPlayModalOpen ] = useState(false);\r\n  const [ roomMembers, setRoomMembers ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // register the publish listener\r\n    solaceConnection.register(handleNewUser);\r\n\r\n    // get initial list of people in the room\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/getUsers`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ roomcode })\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setRoomMembers(data.users))\r\n      .catch((err) => console.log(err));\r\n\r\n    // get video that's already playing\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/getcurrentvideo`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ roomcode })\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const urlString = data.url;\r\n        const url = new URL(urlString);\r\n        const videoID = url.searchParams.get('v');\r\n\r\n        queueVideo(videoID);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleNewUser = (message) => {\r\n    try {\r\n      const obj = JSON.parse(message.payloadString);\r\n      if (obj.messageType === 'userJoined') {\r\n        setRoomMembers((roomMembers) => {\r\n          return [ ...roomMembers, obj.username ];\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"SideBar\">\r\n      <div className=\"SideBar-Top\">\r\n        <SideBarLabel label={roomcode} className=\"RoomCodeLabel\" />\r\n        <SideBarList list={roomMembers} roomcode={roomcode} />\r\n        <SideBarChat roomcode={roomcode} username={username} />\r\n      </div>\r\n      <div className=\"SideBar-Buttons\">\r\n        <button className=\"play-button\" onClick={() => setIsPlayModalOpen(true)}>\r\n          <FontAwesomeIcon icon={faPlayCircle} style={{ marginRight: '10px' }} />\r\n          play\r\n        </button>\r\n        {/* <button className=\"exit-button\">\r\n          <FontAwesomeIcon icon={faDoorOpen} style={{ marginRight: '10px' }} />\r\n          exit\r\n        </button> */}\r\n      </div>\r\n      <ModalPlayVideo\r\n        isOpen={isPlayModalOpen}\r\n        closeModal={() => setIsPlayModalOpen(false)}\r\n        contentLabel=\"Play Video\"\r\n        queueVideo={queueVideo}\r\n        roomcode={roomcode}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import { Redirect } from 'react-router-dom';\r\nimport Video from '../../components/Video/Video';\r\nimport SideBar from '../../components/SideBar/SideBar';\r\n\r\nimport './RoomScreen.css';\r\n\r\nfunction RoomScreen(props) {\r\n  if (!props.location.state) return <Redirect to=\"/\" />;\r\n  const { roomcode, nickname } = props.location.state;\r\n\r\n  let video = new Video({roomcode: roomcode});\r\n\r\n  return (\r\n    <div className=\"RoomScreen\">\r\n      <SideBar roomcode={roomcode} queueVideo={video.playNewVideo} username={nickname} />\r\n      <div className=\"VideoSection\">{video.render()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomScreen;\r\n","import { useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPalette } from '@fortawesome/free-solid-svg-icons';\r\nimport './ThemeChanger.css';\r\n\r\nfunction ThemeChanger({ themeColor, setThemeColor }) {\r\n  const [ showColorPicker, setShowColorPicker ] = useState(false);\r\n  const [ colorValue, setColorValue ] = useState(themeColor);\r\n\r\n  const handleColorChange = (color) => {\r\n    const hex = color.hex;\r\n    setColorValue(hex);\r\n    setThemeColor(hex);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ThemeChanger\">\r\n      <FontAwesomeIcon\r\n        icon={faPalette}\r\n        className=\"ThemeChanger-Icon\"\r\n        onClick={() => setShowColorPicker(!showColorPicker)}\r\n      />\r\n      {showColorPicker ? (\r\n        <div className=\"ThemeChanger-Popover\">\r\n          <div className=\"ThemeChanger-Cover\" onClick={() => setShowColorPicker(false)} />\r\n          <ChromePicker\r\n            className=\"ThemeChanger-ColorPicker\"\r\n            onChange={handleColorChange}\r\n            color={colorValue}\r\n            disableAlpha\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThemeChanger;\r\n","import { useState } from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport BubblesBackground from './screens/BubbleBackground/BubbleBackground';\r\nimport MainMenu from './screens/MainMenu/MainMenu';\r\nimport RoomScreen from './screens/RoomScreen/RoomScreen';\r\nimport ThemeChanger from './components/ThemeChanger/ThemeChanger';\r\nimport './styles/App.css';\r\n\r\nconst DEFAULT_THEME_COLOR = '#413c77';\r\nconst DEFAULT_TEHEME_TRANSPARENCY = '77';\r\n\r\nfunction App() {\r\n  const [ themeColor, setThemeColor ] = useState(DEFAULT_THEME_COLOR);\r\n  const [ themeTransparency, setThemeTransparency ] = useState(DEFAULT_TEHEME_TRANSPARENCY);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BubblesBackground themeColor={themeColor} themeTransparency={themeTransparency} />\r\n      <ThemeChanger themeColor={themeColor} setThemeColor={setThemeColor} />\r\n      <Router basename=\"/\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MainMenu} />\r\n          <Route path=\"/room\" exact component={RoomScreen} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './frontend/styles/index.css';\r\nimport App from './frontend/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}