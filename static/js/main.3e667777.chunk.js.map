{"version":3,"sources":["frontend/screens/BubbleBackground/BubbleBackground.js","backend/socket.js","frontend/components/ModalCreateABubble/ModalCreateABubble.js","frontend/components/ModalJoinABubble/ModalJoinABubble.js","frontend/img/logo.svg","frontend/screens/MainMenu/MainMenu.js","frontend/components/Video/Video.js","frontend/components/ModalPlayVideo/ModalPlayVideo.js","frontend/components/SideBarLabel/SideBarLabel.js","frontend/components/SideBarList/SideBarList.js","frontend/components/SideBarChat/SideBarChat.js","frontend/components/SideBar/SideBar.js","frontend/screens/RoomScreen/RoomScreen.js","frontend/components/ThemeChanger/ThemeChanger.js","frontend/App.js","index.js"],"names":["Bubbles","themeColor","colorTransparent","themeTransparency","className","style","backgroundImage","socket","io","process","Modal","setAppElement","MODAL_STYLES","overlay","backgroundColor","content","width","minWidth","borderRadius","top","left","right","bottom","marginRight","transform","zIndex","color","ModalCreateABubble","isOpen","closeModal","contentLabel","useState","nickname","setNickname","newRoomCode","setNewRoomCode","isFetching","setIsFetching","networkErrorEncountered","setNetworkErrorEncountered","redirectToRoomScreen","setRedirectToRoomScreen","to","pathname","state","roomcode","handleSubmit","e","a","preventDefault","fetch","method","then","response","json","roomCodeObject","roomCode","message","payload","username","socketId","id","headers","body","JSON","stringify","status","resetForm","console","log","onRequestClose","onSubmit","type","value","onChange","target","maxLength","disabled","cursor","marginBottom","display","padding","ModalJoinABubble","setRoomCode","MainMenu","isJoinModalOpen","setIsJoinModalOpen","isCreateModalOpen","setIsCreateModalOpen","src","logo","alt","onClick","VideoApp","props","playNewVideo","bind","playVideo","pauseVideo","onPlayerReady","getStateName","videoId","player","videoOptions","height","this","loadVideoById","event","on","eventCode","videoTime","stateName","broadcastedVideoTime","currentVideoTime","getCurrentTime","Math","abs","seekTo","data","emit","opts","onReady","onPlaybackRateChange","onVideoPlaybackRateChange","onStateChange","onVideoStateChange","onEnd","onVideoEnd","Component","ModalPlayVideo","queueVideo","useEffect","handleNewVideoUrl","urlString","url","URL","searchParams","get","error","document","getElementById","catch","err","autoComplete","SideBarLabel","label","SideBarList","list","displayList","setDisplayList","map","item","i","SideBarChat","setMessage","messages","setMessages","anchor","useRef","handleNewTextMessage","newMessage","text","scrollToCurrentMessage","current","scrollIntoView","behavior","user","ref","messageInfo","SideBar","isPlayModalOpen","setIsPlayModalOpen","roomMembers","setRoomMembers","isTabletOrMobileDevice","useMediaQuery","query","handleNewUser","users","videoID","sidebarStyle","margin","marginTop","sidebarButtons","icon","faPlayCircle","RoomScreen","location","roomScreenStyle","videoSectionStyle","flexDirection","justifyContent","video","Video","render","ThemeChanger","setThemeColor","showColorPicker","setShowColorPicker","colorValue","setColorValue","faPalette","hex","disableAlpha","App","basename","path","exact","component","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3e667777.chunk.js","sourcesContent":["import './BubbleBackground.css';\r\n\r\nfunction Bubbles({ themeColor, themeTransparency }) {\r\n  const colorTransparent = themeColor + themeTransparency;\r\n  return (\r\n    <div\r\n      className=\"Bubbles\"\r\n      style={{ backgroundImage: `linear-gradient(to bottom right, ${colorTransparent}, ${themeColor})` }}\r\n    >\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n      <div className=\"bubble\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bubbles;\r\n","import { io } from 'socket.io-client';\r\nconst socket = io(process.env.REACT_APP_BACKEND_URL);\r\n\r\nexport default socket;\r\n","import { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport './ModalCreateABubble.css';\r\nimport socket from '../../../backend/socket';\r\n\r\nModal.setAppElement('#modal-portal');\r\n\r\nconst MODAL_STYLES = {\r\n  overlay: {\r\n    backgroundColor: 'none'\r\n  },\r\n  content: {\r\n    width: '15%',\r\n    minWidth: '200px',\r\n    borderRadius: '10px',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: '1000',\r\n    color: 'rgba(0, 0, 0, 0.5)'\r\n  }\r\n};\r\n\r\nfunction ModalCreateABubble({ isOpen, closeModal, contentLabel }) {\r\n  const [ nickname, setNickname ] = useState('');\r\n  const [ newRoomCode, setNewRoomCode ] = useState('');\r\n  const [ isFetching, setIsFetching ] = useState(false);\r\n  const [ networkErrorEncountered, setNetworkErrorEncountered ] = useState(false);\r\n  const [ redirectToRoomScreen, setRedirectToRoomScreen ] = useState(false);\r\n\r\n  if (redirectToRoomScreen) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/room',\r\n          state: { roomcode: newRoomCode, nickname: nickname }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (nickname === '') return;\r\n\r\n    setIsFetching(true);\r\n    try {\r\n      // Create the room\r\n      const roomCodeObject = await fetch(`${process.env.REACT_APP_BACKEND_URL}/createroom`, {\r\n        method: 'POST'\r\n      }).then((response) => response.json());\r\n\r\n      const roomCode = roomCodeObject.message;\r\n      const payload = { roomCode: roomCode, username: nickname, socketId: socket.id };\r\n      setNewRoomCode(roomCode);\r\n\r\n      // Join the room\r\n      const joinRoomResponse = await fetch(`${process.env.REACT_APP_BACKEND_URL}/joinroom`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (joinRoomResponse.status !== 200) {\r\n        setNetworkErrorEncountered(true);\r\n        resetForm();\r\n        return;\r\n      }\r\n\r\n      // Success\r\n      setRedirectToRoomScreen(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setNetworkErrorEncountered(true);\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNickname('');\r\n    setIsFetching(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      // onAfterOpen={afterOpenModal}\r\n      onRequestClose={() => {\r\n        resetForm();\r\n        setNetworkErrorEncountered(false);\r\n        closeModal();\r\n      }}\r\n      style={MODAL_STYLES}\r\n      contentLabel={contentLabel}\r\n    >\r\n      <p className=\"modal-header\">nickname</p>\r\n      <form className=\"modal-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"modal-name-input\"\r\n          type=\"text\"\r\n          value={nickname}\r\n          onChange={(e) => setNickname(e.target.value)}\r\n          maxLength={15}\r\n          disabled={isFetching}\r\n          style={{ cursor: isFetching ? 'not-allowed' : 'auto' }}\r\n        />\r\n        <button className=\"modal-submit-button\" disabled={nickname === '' || isFetching}>\r\n          join\r\n        </button>\r\n      </form>\r\n      <p style={{ marginBottom: 0, color: '#f44', display: networkErrorEncountered ? 'block' : 'none' }}>\r\n        Our servers are having some issues at the moment...\r\n      </p>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalCreateABubble;\r\n","import { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport './ModalJoinABubble.css';\r\n\r\nimport socket from '../../../backend/socket';\r\n\r\nModal.setAppElement('#modal-portal');\r\n\r\nconst MODAL_STYLES = {\r\n  overlay: {\r\n    backgroundColor: 'none'\r\n  },\r\n  content: {\r\n    width: '15%',\r\n    minWidth: '200px',\r\n    borderRadius: '10px',\r\n    padding: '30px',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: '1000',\r\n    color: 'rgba(0, 0, 0, 0.5)'\r\n  }\r\n};\r\n\r\nfunction ModalJoinABubble({ isOpen, closeModal, contentLabel }) {\r\n  const [ roomCode, setRoomCode ] = useState('');\r\n  const [ nickname, setNickname ] = useState('');\r\n  const [ isFetching, setIsFetching ] = useState(false);\r\n  const [ networkErrorEncountered, setNetworkErrorEncountered ] = useState(false);\r\n  const [ redirectToRoomScreen, setRedirectToRoomScreen ] = useState(false);\r\n\r\n  if (redirectToRoomScreen) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/room',\r\n          state: { roomcode: roomCode, nickname }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsFetching(true);\r\n\r\n    try {\r\n      const payload = { roomCode: roomCode, username: nickname, socketId: socket.id };\r\n      const joinRoomResponse = await fetch(`${process.env.REACT_APP_BACKEND_URL}/joinroom`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (joinRoomResponse.status === 200) {\r\n        // redirect to room screen\r\n        setRedirectToRoomScreen(true);\r\n      } else {\r\n        setNetworkErrorEncountered(true);\r\n        resetForm();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setNetworkErrorEncountered(true);\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setRoomCode('');\r\n    setNickname('');\r\n    setIsFetching(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      // onAfterOpen={afterOpenModal}\r\n      onRequestClose={() => {\r\n        resetForm();\r\n        setNetworkErrorEncountered(false);\r\n        closeModal();\r\n      }}\r\n      style={MODAL_STYLES}\r\n      contentLabel={contentLabel}\r\n    >\r\n      <form className=\"modal-join-form\" onSubmit={handleSubmit}>\r\n        <p className=\"modal-join-header\">bubble code</p>\r\n        <input\r\n          className=\"modal-join-code-input\"\r\n          type=\"text\"\r\n          value={roomCode}\r\n          onChange={(e) => setRoomCode(e.target.value)}\r\n          disabled={isFetching}\r\n          style={{ cursor: isFetching ? 'not-allowed' : 'auto' }}\r\n        />\r\n        <p className=\"modal-join-header\">nickname</p>\r\n        <input\r\n          className=\"modal-join-name-input\"\r\n          type=\"text\"\r\n          value={nickname}\r\n          onChange={(e) => setNickname(e.target.value)}\r\n          maxLength={15}\r\n          disabled={isFetching}\r\n          style={{ cursor: isFetching ? 'not-allowed' : 'auto' }}\r\n        />\r\n        <button className=\"modal-join-submit-button\" disabled={nickname === '' || roomCode === '' || isFetching}>\r\n          join\r\n        </button>\r\n      </form>\r\n      <p style={{ marginBottom: 0, color: '#f44', display: !networkErrorEncountered || isFetching ? 'none' : 'block' }}>\r\n        Please enter a valid room code.\r\n      </p>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalJoinABubble;\r\n","export default __webpack_public_path__ + \"static/media/logo.cead2453.svg\";","import { useState, useEffect } from 'react';\r\nimport ModalCreateABubble from '../../components/ModalCreateABubble/ModalCreateABubble';\r\nimport ModalJoinABubble from '../../components/ModalJoinABubble/ModalJoinABubble';\r\nimport logo from '../../img/logo.svg';\r\nimport './MainMenu.css';\r\n\r\nfunction MainMenu() {\r\n  const [ isJoinModalOpen, setIsJoinModalOpen ] = useState(false);\r\n  const [ isCreateModalOpen, setIsCreateModalOpen ] = useState(false);\r\n\r\n  return (\r\n    <div className=\"MainMenu\">\r\n      <div style={{ display: isJoinModalOpen || isCreateModalOpen ? 'none' : 'block' }}>\r\n        <div className=\"logo-section\">\r\n          <h1 className=\"logo-text\">bubbles</h1>\r\n          <img className=\"logo-pic\" src={logo} alt=\"logo\" />\r\n        </div>\r\n        <div className=\"menu-buttons\">\r\n          <p className=\"menu-button\" onClick={() => setIsCreateModalOpen(true)}>\r\n            start a bubble\r\n          </p>\r\n          <p className=\"menu-button\" onClick={() => setIsJoinModalOpen(true)}>\r\n            join a bubble\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <ModalCreateABubble\r\n        isOpen={isCreateModalOpen}\r\n        closeModal={() => setIsCreateModalOpen(false)}\r\n        contentLabel=\"Create A Bubble\"\r\n      />\r\n      <ModalJoinABubble\r\n        isOpen={isJoinModalOpen}\r\n        closeModal={() => setIsJoinModalOpen(false)}\r\n        contentLabel=\"Join A Bubble\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React, { Component } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport socket from '../../../backend/socket';\r\n\r\nclass VideoApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.playNewVideo = this.playNewVideo.bind(this);\r\n    this.playVideo = this.playVideo.bind(this);\r\n    this.pauseVideo = this.pauseVideo.bind(this);\r\n    this.onPlayerReady = this.onPlayerReady.bind(this);\r\n    this.getStateName = this.getStateName.bind(this);\r\n    this.videoId = '';\r\n    this.state = {\r\n      player: null,\r\n      videoOptions: {\r\n        height: '100%',\r\n        width: '100%'\r\n      }\r\n    };\r\n  }\r\n\r\n  playNewVideo(videoId) {\r\n    this.videoId = videoId;\r\n    if (this.state.player) {\r\n      this.state.player.loadVideoById(this.videoId, 0);\r\n    }\r\n  }\r\n\r\n  playVideo(event) {\r\n    this.state.player.playVideo();\r\n  }\r\n\r\n  pauseVideo(event) {\r\n    this.state.player.pauseVideo();\r\n  }\r\n\r\n  onPlayerReady(event) {\r\n    this.state.player = event.target;\r\n    // videoId will be some video if the user joined a room with an already-playing video\r\n    if (this.videoId !== '') {\r\n      this.playNewVideo(this.videoId);\r\n    }\r\n\r\n    socket.on('videoStateChange', ({ eventCode, videoTime }) => {\r\n      console.log('INCOMING');\r\n\r\n      const stateName = this.getStateName(eventCode);\r\n      const broadcastedVideoTime = videoTime;\r\n      const currentVideoTime = this.state.player.getCurrentTime();\r\n\r\n      if (stateName === 'playing') this.playVideo();\r\n      if (stateName === 'paused') this.pauseVideo();\r\n\r\n      // only seek if difference in video time is greater than 1 sec\r\n      if (Math.abs(currentVideoTime - broadcastedVideoTime) > 1) {\r\n        this.state.player.seekTo(broadcastedVideoTime);\r\n      }\r\n    });\r\n  }\r\n\r\n  onVideoPlaybackRateChange(event) {}\r\n\r\n  onVideoStateChange(event) {\r\n    const eventCode = event.data;\r\n    const videoTime = event.target.getCurrentTime();\r\n    console.log(`Video state ${this.getStateName(eventCode)} at: `, videoTime);\r\n\r\n    // send video state change to the room (this is how we handle play, pause, and seek)\r\n    const roomCode = this.props.roomcode;\r\n    socket.emit('videoStateChange', { roomCode, eventCode, videoTime });\r\n  }\r\n\r\n  onVideoEnd(event) {\r\n    console.log('Video ended');\r\n  }\r\n\r\n  onVideoError(event) {\r\n    console.log('Video error: ', event);\r\n  }\r\n\r\n  getStateName(eventCode) {\r\n    switch (eventCode) {\r\n      case -1:\r\n        return 'unstarted';\r\n      case 0:\r\n        return 'ended';\r\n      case 1:\r\n        return 'playing';\r\n      case 2:\r\n        return 'paused';\r\n      case 3:\r\n        return 'buffering';\r\n      case 5:\r\n        return 'video cued';\r\n      default:\r\n        return 'invalid code';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <YouTube\r\n        videoId={this.videoId}\r\n        className={'Video'}\r\n        opts={this.state.videoOptions}\r\n        onReady={this.onPlayerReady.bind(this)}\r\n        onPlaybackRateChange={this.onVideoPlaybackRateChange.bind(this)}\r\n        onStateChange={this.onVideoStateChange.bind(this)}\r\n        onEnd={this.onVideoEnd.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoApp;\r\n","import { useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './ModalPlayVideo.css';\r\nimport socket from '../../../backend/socket';\r\n\r\nModal.setAppElement('#modal-portal');\r\n\r\nconst MODAL_STYLES = {\r\n  overlay: {\r\n    backgroundColor: 'none'\r\n  },\r\n  content: {\r\n    width: '15%',\r\n    minWidth: '200px',\r\n    borderRadius: '10px',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: '1000',\r\n    color: 'rgba(0, 0, 0, 0.5)'\r\n  }\r\n};\r\n\r\nfunction ModalPlayVideo({ isOpen, closeModal, contentLabel, queueVideo, roomcode }) {\r\n  useEffect(() => {\r\n    socket.on('newVideoUrl', handleNewVideoUrl);\r\n  }, []);\r\n\r\n  const handleNewVideoUrl = (urlString) => {\r\n    try {\r\n      const url = new URL(urlString);\r\n      queueVideo(url.searchParams.get('v'));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let urlString = document.getElementById('youtube-link-input').value;\r\n      let url = new URL(urlString);\r\n      queueVideo(url.searchParams.get('v'));\r\n\r\n      // emit the url to everyone in the room\r\n      socket.emit('newVideoUrl', { roomCode: roomcode, urlString: urlString });\r\n\r\n      // update backend\r\n      const payload = { roomcode, url: urlString };\r\n      fetch(`${process.env.REACT_APP_BACKEND_URL}/setcurrentvideo`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n      }).catch((err) => console.log(err));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onRequestClose={closeModal} style={MODAL_STYLES} contentLabel={contentLabel}>\r\n      <p className=\"modal-play-header\">youtube video url</p>\r\n      <form className=\"modal-play-form\" onSubmit={handleSubmit}>\r\n        <input id=\"youtube-link-input\" className=\"modal-play-input\" type=\"text\" autoComplete=\"off\" />\r\n        <button className=\"modal-play-submit-button\">play</button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalPlayVideo;\r\n","function SideBarLabel({ label, className, onClick }) {\r\n  return (\r\n    <p className={className} onClick={onClick}>\r\n      {label}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default SideBarLabel;\r\n","import { useState } from 'react';\r\nimport './SideBarList.css';\r\nimport SideBarLabel from '../SideBarLabel/SideBarLabel';\r\n\r\nfunction SideBarList({ list }) {\r\n  const [ displayList, setDisplayList ] = useState(true);\r\n  return (\r\n    <div className=\"SideBarList\">\r\n      <SideBarLabel className=\"SideBarList-Toggle\" label=\"members\" onClick={() => setDisplayList(!displayList)} />\r\n      <div style={{ display: displayList ? 'block' : 'none' }} className=\"SideBarList-Items\">\r\n        {list.map((item, i) => <p key={i}>{item}</p>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBarList;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport './SideBarChat.css';\r\nimport socket from '../../../backend/socket';\r\n\r\nfunction SideBarChat({ roomcode, username }) {\r\n  const [ message, setMessage ] = useState('');\r\n  const [ messages, setMessages ] = useState([]);\r\n  const anchor = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.on('newTextMessage', handleNewTextMessage);\r\n  }, []);\r\n\r\n  const handleNewTextMessage = ({ username, text }) => {\r\n    const newMessage = { username, text };\r\n    setMessages((messages) => [ ...messages, newMessage ]);\r\n    scrollToCurrentMessage();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (message === '') return;\r\n\r\n    // send the message to everyone in the room\r\n    const messageInfo = { username, text: message };\r\n    socket.emit('newTextMessage', { roomCode: roomcode, messageInfo });\r\n\r\n    // reset form\r\n    setMessage('');\r\n  };\r\n\r\n  const scrollToCurrentMessage = () => {\r\n    anchor.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"SideBarChat\">\r\n      <div className=\"SideBarChat-Items\">\r\n        {messages.map((message, i) => {\r\n          const user = message.username;\r\n          const text = message.text;\r\n          return (\r\n            <p className=\"SideBarChat-Item\" key={i}>\r\n              {user}: {text}\r\n            </p>\r\n          );\r\n        })}\r\n        <div ref={anchor} className=\"SideBarChat-anchor\" />\r\n      </div>\r\n      <form className=\"SideBarChat-Form\" onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBarChat;\r\n","import { useState, useEffect } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport ModalPlayVideo from '../ModalPlayVideo/ModalPlayVideo';\r\nimport SideBarLabel from '../SideBarLabel/SideBarLabel';\r\nimport SideBarList from '../SideBarList/SideBarList';\r\nimport SideBarChat from '../SideBarChat/SideBarChat';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport './SideBar.css';\r\nimport socket from '../../../backend/socket';\r\n\r\nfunction SideBar({ roomcode, username, queueVideo }) {\r\n  const [ isPlayModalOpen, setIsPlayModalOpen ] = useState(false);\r\n  const [ roomMembers, setRoomMembers ] = useState([]);\r\n  const isTabletOrMobileDevice = useMediaQuery({\r\n    query: '(max-device-width: 700px)'\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on('newUserJoinedRoom', handleNewUser);\r\n\r\n    // get initial list of people in the room\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/getUsers`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ roomcode })\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setRoomMembers(data.users))\r\n      .catch((err) => console.log(err));\r\n\r\n    // get video that's already playing\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/getcurrentvideo`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ roomcode })\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const urlString = data.url;\r\n        const url = new URL(urlString);\r\n        const videoID = url.searchParams.get('v');\r\n\r\n        queueVideo(videoID);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleNewUser = (username) => {\r\n    setRoomMembers((roomMembers) => {\r\n      return [ ...roomMembers, username ];\r\n    });\r\n  } \r\n\r\n  // responsive styling\r\n  let sidebarStyle = {};\r\n  if (isTabletOrMobileDevice) {\r\n    sidebarStyle = { width: '100%', margin: '0', marginTop: '10px' };\r\n  }\r\n\r\n  let sidebarButtons = (\r\n    <div className=\"SideBar-Buttons\">\r\n      <button className=\"play-button\" onClick={() => setIsPlayModalOpen(true)}>\r\n        <FontAwesomeIcon icon={faPlayCircle} style={{ marginRight: '10px' }} />\r\n        play\r\n      </button>\r\n      {/* <button className=\"exit-button\">\r\n      <FontAwesomeIcon icon={faDoorOpen} style={{ marginRight: '10px' }} />\r\n      exit\r\n    </button> */}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"SideBar\" style={sidebarStyle}>\r\n      {\r\n        (isTabletOrMobileDevice) ?\r\n        <>\r\n          {sidebarButtons}\r\n          <div className=\"SideBar-Top\">\r\n            <SideBarLabel label={roomcode} className=\"RoomCodeLabel\" />\r\n            <SideBarChat roomcode={roomcode} username={username} />\r\n          </div>\r\n        </>\r\n        :\r\n        <>\r\n          <div className=\"SideBar-Top\">\r\n            <SideBarLabel label={roomcode} className=\"RoomCodeLabel\" />\r\n            <SideBarList list={roomMembers} roomcode={roomcode} />\r\n            <SideBarChat roomcode={roomcode} username={username} />\r\n          </div>\r\n          {sidebarButtons}\r\n        </> \r\n      }\r\n      <ModalPlayVideo\r\n        isOpen={isPlayModalOpen}\r\n        closeModal={() => setIsPlayModalOpen(false)}\r\n        contentLabel=\"Play Video\"\r\n        queueVideo={queueVideo}\r\n        roomcode={roomcode}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import { Redirect } from 'react-router-dom';\r\nimport Video from '../../components/Video/Video';\r\nimport SideBar from '../../components/SideBar/SideBar';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport './RoomScreen.css';\r\n\r\nfunction RoomScreen(props) {\r\n  const isTabletOrMobileDevice = useMediaQuery({\r\n    query: '(max-device-width: 700px)'\r\n  });\r\n\r\n  if (!props.location.state) return <Redirect to=\"/\" />;\r\n  const { roomcode, nickname } = props.location.state;\r\n\r\n  // responsive styling\r\n  let roomScreenStyle = {};\r\n  let videoSectionStyle = { margin: '20px' };\r\n  if (isTabletOrMobileDevice) {\r\n    roomScreenStyle = { flexDirection: 'column-reverse', justifyContent: 'flex-end' };\r\n    videoSectionStyle = { margin: '0px', height: '40vh' };\r\n  }\r\n\r\n  const video = new Video({ roomcode: roomcode });\r\n  return (\r\n    <div className=\"RoomScreen\" style={roomScreenStyle}>\r\n      <SideBar roomcode={roomcode} queueVideo={video.playNewVideo} username={nickname} />\r\n      <div className=\"VideoSection\" style={videoSectionStyle}>\r\n        {video.render()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomScreen;\r\n","import { useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPalette } from '@fortawesome/free-solid-svg-icons';\r\nimport './ThemeChanger.css';\r\n\r\nfunction ThemeChanger({ themeColor, setThemeColor }) {\r\n  const [ showColorPicker, setShowColorPicker ] = useState(false);\r\n  const [ colorValue, setColorValue ] = useState(themeColor);\r\n\r\n  const handleColorChange = (color) => {\r\n    const hex = color.hex;\r\n    setColorValue(hex);\r\n    setThemeColor(hex);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ThemeChanger\">\r\n      <FontAwesomeIcon\r\n        icon={faPalette}\r\n        className=\"ThemeChanger-Icon\"\r\n        onClick={() => setShowColorPicker(!showColorPicker)}\r\n      />\r\n      {showColorPicker ? (\r\n        <div className=\"ThemeChanger-Popover\">\r\n          <div className=\"ThemeChanger-Cover\" onClick={() => setShowColorPicker(false)} />\r\n          <ChromePicker\r\n            className=\"ThemeChanger-ColorPicker\"\r\n            onChange={handleColorChange}\r\n            color={colorValue}\r\n            disableAlpha\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThemeChanger;\r\n","import { useState } from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport BubblesBackground from './screens/BubbleBackground/BubbleBackground';\r\nimport MainMenu from './screens/MainMenu/MainMenu';\r\nimport RoomScreen from './screens/RoomScreen/RoomScreen';\r\nimport ThemeChanger from './components/ThemeChanger/ThemeChanger';\r\nimport './styles/App.css';\r\n\r\nconst DEFAULT_THEME_COLOR = '#413c77';\r\nconst DEFAULT_TEHEME_TRANSPARENCY = '77';\r\n\r\nfunction App() {\r\n  const [ themeColor, setThemeColor ] = useState(DEFAULT_THEME_COLOR);\r\n  const [ themeTransparency, setThemeTransparency ] = useState(DEFAULT_TEHEME_TRANSPARENCY);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BubblesBackground themeColor={themeColor} themeTransparency={themeTransparency} />\r\n      <ThemeChanger themeColor={themeColor} setThemeColor={setThemeColor} />\r\n      <Router basename=\"/\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MainMenu} />\r\n          <Route path=\"/room\" exact component={RoomScreen} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './frontend/styles/index.css';\r\nimport App from './frontend/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}